#!/usr/bin/env bash

# Get the repository root and set the ANSIBLE_CONFIG environment var,
# so ansible-vault can make use of the project's ansible config.
# Here we're just assuming that the ansible.cfg file is in the repo
# root. YMMV.
TARGET_FILE_DIR=$(dirname "$1")
GIT_ROOT="$(git -C ${TARGET_FILE_DIR} rev-parse --show-toplevel)"
export ANSIBLE_CONFIG=${GIT_ROOT}/ansible.cfg

# Try to decrypt and view the vaulted file
RESULT="$(ansible-vault view $1 2>&1)"
retval=$?

# If nothing went wrong that's fine, echo the result and we're done.
if [ $retval -eq 0 ]; then
    echo -e "${RESULT}"
    exit $retval

else
    # If the vault error was that the file wasn't encrypted, just cat the file.
    # Otherwise, yea, it's a legit error, just print the error message to stdout
    if [[ $RESULT == *"ERROR! input is not vault encrypted"* ]]; then
        cat $1
        exit 0
    else
        >&2 echo -e "${RESULT}"
        exit $retval
    fi
fi
